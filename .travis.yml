language: java

jdk:
  - openjdk11

services:
  - docker

addons:
  sonarcloud:
    organization: $ORGANIZATION
    token: $SONARCLOUD_TOKEN

install:
  - curl https://cli-assets.heroku.com/install.sh | sh
  - cd codeceptjs-rest
  - npm init -y
  - npm install codeceptjs chai --save-dev
  - npm install mocha-junit-reporter mocha-multi --save
  - cd ..

script:
  - cd server
  - >
    echo "COMENZANDO BUILD";
    mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar;
    look_exit=$?;
    if [[ "$look_exit" = "1" ]]
      then echo "BUILD FALLIDO"
      exit 1
    fi;
    echo "BUILD EXITOSO"

  - echo "COMENZANDO CONSTRUCCION DE IMAGEN DE DOCKER"
  - docker build -t $ORGANIZATION/payroll-server:latest .
  - echo "CONSTRUCCION EXITOSA"

  - echo "COMENZANDO TEST DE INTEGRACION"
  - docker run -d -e "PORT=$PORT" -p $PORT:$PORT $ORGANIZATION/payroll-server:latest
  - >
    export tries=0;
    export max_tries=12;
    while [[ true ]]; do
      tries=$((tries + 1));
      echo "ESPERANDO SERVICIO... intento $tries de $max_tries";
      sleep 5;
      curl -G localhost:$PORT
      look_exit=$?;
      if [[ "$look_exit" = "0" ]]
        then echo "SERVICIO DISPONIBLE"
        break
      fi
      if [[ "$tries" -ge "$max_tries" ]]
        then echo "LIMITE DE TIEMPO ALCANZADO"
        exit 1
        break
      fi
    done;
    cd ../codeceptjs-rest;
    npx codeceptjs run --steps --reporter mocha-multi;
    look_exit=$?;
    if [[ "$look_exit" = "1" ]]
      then echo "TEST DE INTEGRACION FALLIDO"
      exit 1
    fi;
    echo "TEST DE INTEGRACION EXITOSO"

  - echo "COMENZANDO SUBIDA A REGISTRY DE DOCKER Y HEROKU"
  - echo "$DOCKER_PASSWORD" | docker login -u $ORGANIZATION --password-stdin
  - echo "$HEROKU_API_KEY" | docker login -u_ --password-stdin registry.heroku.com
  - docker tag $ORGANIZATION/payroll-server:latest registry.heroku.com/$HEROKU_APP_STAGING/web
  - docker push $ORGANIZATION/payroll-server:latest
  - docker push registry.heroku.com/$HEROKU_APP_STAGING/web
  - heroku container:release web --app=$HEROKU_APP_STAGING
